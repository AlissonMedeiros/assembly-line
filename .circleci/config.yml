# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn integration-test
      - run: mvn sonar:sonar -Dsonar.projectKey=AlissonMedeiros_assembly-line -Dsonar.organization=alissonmedeiros-github -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=5883a4b728fdff728a176c01d5b8375e9d37feab
  build-docker:
    environment:
      IMAGE_NAME: themedeiros/assembly-line
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME:latest .
    publish-latest:
      environment:
        IMAGE_NAME: building-on-ci
      docker:
        - image: circleci/buildpack-deps:stretch
      steps:
        - setup_remote_docker
        - run:
            name: Publish Docker Image to Docker Hub
            command: |
              echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
              docker push $IMAGE_NAME:latest
  workflows:
    version: 2
    build-master:
      jobs:
        - build-docker:
            filters:
              branches:
                only: master
        - publish-latest:
            requires:
              - build
            filters:
              branches:
                only: master